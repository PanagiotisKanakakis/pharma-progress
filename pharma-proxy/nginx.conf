user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    ignore_invalid_headers on;
    client_header_timeout 240;
    client_body_timeout 240;
    send_timeout 240;
    client_body_buffer_size 2m;
    client_header_buffer_size 10k;
    client_max_body_size 100m;
    large_client_header_buffers 8 1024k;

    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;

    # Include CORS support
    # Define allowed origins
    map $http_origin $origin_allowed {
        #default 0;
        default 1;    # For dev purposes, should be 0 by default

        http://pharma.test 1;
        http://auth.pharma.test 1;
    }

    map $origin_allowed $origin {
        default "";
        1 $http_origin;
    }

    server { 
        server_name _ pharma.test;
        listen 80;
        listen [::]:80;

        # needed since we use a variable in the address (see below)
        resolver 127.0.0.11 valid=30s;

        charset utf-8;

        # General configuration
        index index.html index.htm;
        root /usr/share/nginx/html;

        error_page 404 /404.html;

        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
            deny  all;
        }

        location ~* ^/(v[\d]+|admin|oauth2)/.* {

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $origin;
                add_header 'Access-Control-Allow-Methods' 'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT';

                # Custom headers
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';

                #Pre-flight info
                add_header 'Access-Control-Max-Age' 3600;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                add_header 'Access-Control-Allow-Credentials' True;
                return 204;
            }

            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' $origin;
                add_header 'Access-Control-Allow-Methods' 'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' $origin;
                add_header 'Access-Control-Allow-Methods' 'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }

            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        Host $http_host;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_connect_timeout   240;
            proxy_send_timeout      240;
            proxy_read_timeout      240;

            # Allow booting when service is down
            # trick to avoid circular dependency
            # nginx will boot even if the oauth2-proxy is down
#             set $oauth2_proxy_upstream oauth2-proxy:4180;
            set $pharma_backend_upstream pharma_backend:3000;

            proxy_pass              http://$pharma_backend_upstream;
            proxy_redirect          off;

        }

        location / {
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        Host $http_host;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_connect_timeout   240;
            proxy_send_timeout      240;
            proxy_read_timeout      240;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            add_header X-Frame-Options "SAMEORIGIN";

            # Allow booting when service is down
            set $pharma_frontend_upstream pharma-frontend:3000;

            proxy_pass              http://$pharma_frontend_upstream;
            proxy_redirect          off;
        }

    }

    server { 
        server_name auth.pharma.test;
        listen 80;
        listen [::]:80;

        # needed since we use a variable in the address (see below)
        resolver 127.0.0.11 valid=30s;

        charset utf-8;

        # General configuration
        index index.html index.htm;
        root /usr/share/nginx/html;

        error_page 404 /404.html;

        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
            deny  all;
        } 

        location / {
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        Host $http_host;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_connect_timeout   240;
            proxy_send_timeout      240;
            proxy_read_timeout      240;

            # Allow booting when service is down
            set $pharma_keycloak_upstream keycloak:8080;

            proxy_pass              http://$pharma_keycloak_upstream;
            proxy_redirect          off;
        }

    }

}

